# HTTP -> HTTPS
server {
  listen 80;
  listen [::]:80;
  server_name onboard.savannasolutions.co.zm;
  return 301 https://$host$request_uri;
}

# HTTPS reverse proxy
server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;

  server_name onboard.savannasolutions.co.zm;

  # Cloudflare Origin cert/key (ensure it covers this hostname or use a wildcard)
  ssl_certificate     /etc/ssl/certs/odoo-cloudflare.pem;
  ssl_certificate_key /etc/ssl/private/odoo-cloudflare.key;

  client_max_body_size 32m;

  # Trust Cloudflare real client IPs
  real_ip_header CF-Connecting-IP;
  set_real_ip_from 173.245.48.0/20;
  set_real_ip_from 103.21.244.0/22;
  set_real_ip_from 103.22.200.0/22;
  set_real_ip_from 103.31.4.0/22;
  set_real_ip_from 141.101.64.0/18;
  set_real_ip_from 108.162.192.0/18;
  set_real_ip_from 190.93.240.0/20;
  set_real_ip_from 188.114.96.0/20;
  set_real_ip_from 197.234.240.0/22;
  set_real_ip_from 198.41.128.0/17;
  set_real_ip_from 162.158.0.0/15;
  set_real_ip_from 104.16.0.0/13;
  set_real_ip_from 104.24.0.0/14;
  set_real_ip_from 172.64.0.0/13;
  set_real_ip_from 131.0.72.0/22;

  # Proxy to onboarding app (same Docker network)
  location / {
    proxy_pass http://onboarding_web:8000;

    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_http_version 1.1;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        "upgrade";

    proxy_read_timeout 300;
  }
}
